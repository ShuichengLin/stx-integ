From 181e7d3d7f1a3ea9cd532f8a18441ae4f569255b Mon Sep 17 00:00:00 2001
Message-Id: <181e7d3d7f1a3ea9cd532f8a18441ae4f569255b.1507237258.git.Jim.Somerville@windriver.com>
In-Reply-To: <2a9fb6a58e40e8604d97223603111e869bb774b1.1507237258.git.Jim.Somerville@windriver.com>
References: <2a9fb6a58e40e8604d97223603111e869bb774b1.1507237258.git.Jim.Somerville@windriver.com>
From: Allain Legacy <allain.legacy@windriver.com>
Date: Fri, 29 Jan 2016 12:13:40 -0500
Subject: [PATCH 03/24] CGTS-3744: route: do not cache fib route info on local
 routes with oif

For local routes that require a particular output interface we do not want to
cache the result.  Caching the result causes incorrect behaviour when there are
multiple source addresses on the interface.  The end result being that if the
intended recipient is waiting on that interface for the packet he won't receive
it because it will be delivered on the loopback interface and the IP_PKTINFO
ipi_ifindex will be set to the loopback interface as well.

This can be tested by running a program such as "dhcp_release" which attempts
to inject a packet on a particular interface so that it is received by another
program on the same board.  The receiving process should see an IP_PKTINFO
ipi_ifndex value of the source interface (e.g., eth1) instead of the loopback
interface (e.g., lo).  The packet will still appear on the loopback interface
in tcpdump but the important aspect is that the CMSG info is correct.

Sample dhcp_release command line:

   dhcp_release eth1 192.168.204.222 02:11:33:22:44:66

Signed-off-by: Allain Legacy <allain.legacy@windriver.com>
Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 net/ipv4/route.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/net/ipv4/route.c b/net/ipv4/route.c
index e9a2b06..66a2a89 100644
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@ -2044,6 +2044,17 @@ static struct rtable *__mkroute_output(const struct fib_result *res,
 		 */
 		if (fi && res->prefixlen < 4)
 			fi = NULL;
+	} else if ((type == RTN_LOCAL) && (orig_oif != 0)) {
+		/*
+		 * For local routes that require a particular output interface we do
+		 * not want to cache the result.  Caching the result causes incorrect
+		 * behaviour when there are multiple source addresses on the interface.
+		 * The end result being that if the intended recipient is waiting on
+		 * that interface for the packet he won't receive it because it will be
+		 * delivered on the loopback interface and the IP_PKTINFO ipi_ifindex
+		 * will be set to the loopback interface as well.
+		 */
+		fi = NULL;
 	}
 
 	fnhe = NULL;
-- 
1.8.3.1

